<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ss_main_form.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>142, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEACABoBQAANgAAACAgAAABAAgAqAgAAJ4FAAAwMAAAAQAIAKgOAABGDgAAKAAAABAA
        AAAgAAAAAQAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMqVAADNmAAAyJkAAM6ZAADPmgAA0JwAAMeU
        AgDbqgIAzZsGAMqfCwDGmwwA0J0OALycDwC5nBMAt5oUAM6hFgDIpxYArp8ZALKeGgDVrBwAyK4kANGj
        JQDasCYAzbEmANyyJgCypCcAxaooAKekKgC+rC4AzKovANa1LwDUrDEA1rExAJuqOACmqDkAw605AKSt
        PQC2rkEArLBBAM2zQwDBt0cA07lHANXBSwDLtE0Axb5NALOzUADSvFAAuLZTANa7WQCnuloA0sBcAJe6
        XwDTwmMAor5lAHy6ZgDYxGYAabhoAKa7aACuvnAAfb1xANDBcgChxXMAvMh0AJ/AdQCqxHcA2813ALXC
        eAC+xHsA2M97AJfFfADIznwAiseCAIPFgwC8zIQArsyIANrQigDCzIwAns6OALbRjgBSyJAAXMmSANrS
        kgDc0pMAmc6XAMrWmAC10pkA09WZAG7OnQBZzp8AqtGfAM3ZoAB30aEAXs+iALHVpgC/26oAhtWsAJ7X
        rAB11q8AztyvAKbasQB617IAf9m1AK3dtQDT4bcAk9q4AITZuQCI27oA1uC6ANvguwCN3L4AkN2/ALPf
        wACh38EAv+LBANrjwQCY4MQAlt/FAMfmxgCy4scAn+LKAMjmygDW580AsefVALvr3ADS7t8A1vDiAM3x
        5gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARGxsMAAAAAAAAAAAAAAAS
        DSE2OxkAAAAAAAAAAAAGAAEEBQUECgAAAAAAAAAGAAEDBDNbEAUlAAAAAAAOOBIBBAVHZD0UGi8AAAAL
        Ik9QJAQFRWlNYHBZIwAIFUhYXFcJNWltYBdmdh0CCxUtYUgmMWltdHcsBwceDwsVHWVAXxxtdHdOekYq
        YjwIP19qbkoTKGM+E3t1fGs0ADlTaHN3SRZecVp+fXJRAAAAOllwVSAWVHh+fXJSAAAAAABCXW8pGBhE
        fXJLAAAAAAAAAENMMhhnQVE3AAAAAAAAAAAAKx9WeWwwAAAAAAAAAAAAAAAnNDIuAAAAAAAA/D8AAPgf
        AADwDwAA4AcAAMADAACAAQAAAAAAAAAAAAAAAAAAAAAAAIABAADAAwAA4AcAAPAPAAD4HwAA/D8AACgA
        AAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKlAAAzZkAANCcAADHnQAA1KEAANim
        AADGlgEA2qoBANusBgDPnQgAyqALANWkCwDUqg0AwZsPAMSdFAC1nBYA27EWAMmkFwDSrBoAtqIcAKqg
        IADIqiQA1KclAK+iJgDRoyYA2a4mANuyJgC9pysAx7EsANOvMACjqTEAzqkxANq2MQCwqzMA1Lg8AKau
        QQDOrkQAk61GAL2wRgC1tEcAyrpHAKi1TADXs04AfrBQAMy9UADTu1MAh7VXAKG4WADMw1gA1L1gANrI
        YwC6w2QAtbxlAKrCaQBnum0AyMltAHO7bwBzwHcAp8Z3AHfAeQDYzHkAl8N7AMbLewCBxoMA0M+DAKfI
        hQCTyIcAssqNANvTjQBQx44AxM6OALbQjgDN1Y8AksySAL3OkwDA1JQAnc6XAE7LmADW0pgAbM2cAK3Q
        nABUzZ0AtdSeAKfSnwCK0qEAXc+iAK7WpQC61qUAZtGmAMrapgCD1KkAcdOrAJ3YrQDT3K0A4NuuAHnW
        sQDK3rEAjNiyAK7bsgC53LQAgNi2ANbfuACF2bkAwuC5AJrcugCL27wA2+G9ANniwACg3sEAk97CANHj
        wgCq4cUAx+bHAJzgyACw48oA1+bLAKTjzQC55s8A0OjPAK3m0gDL7NcAu+rbANDu3wDE7uEA1/DjAM3w
        5gDU8+oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPExMP
        BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUKzY2ODk4FwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAA
        DR4uOTk7JQAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAEBAQICEyEjDQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABAQEBAgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQICChsRBAIADgAAAAAAAAAAAAAAAAAA
        AAAAAAABAQEBAgI/W1sRBAQBGwAAAAAAAAAAAAAAAAAUAAAAAQEBAQICI1tbX0IEBAQBGwAAAAAAAAAA
        AAAAJTYPAAABAQEBAgIvW19fZBwEBAQBGwAAAAAAAAAAAAA2NkUlAQEBAQICAilfX2RmNRJBQSc0NAAA
        AAAAAAAOADZFTVE5DgEBAgICCl9kZmk6HG1xbFBQNAAAAAAAERgjRU1RUVVPEwECAgIbZGZpaTQFU3F0
        b1JSJgAAAAkYGD9RUVFVVVg/AgICFVRmaWltOgUMVnR3clcRAAABGBgYPVtVVVVYWCECJ0lkZmlpbW1o
        DAUFMFJXKAsAAwkYGBgmW1tYWE8hAgJaZGZpaW1tcXEzBQUHBwcICAkGCRgYGBY9X1ovCikKAlpmaWlt
        bXFxdHQSBwcHCBAiCR8JGBgYFh9kSRYbXy8COmlpbW1xcXR0d1JXGgcIcFkJMQkYGBYWNGRmTExpJwIR
        YW1tcXF0RxIseXk3CCB4bk4xARgmQlRkZmlpbVwWCwIVXHFxdGIcBUt5eUhIfXpdXSIACkJJYWZpaW1t
        aB0ZEgsEKFAzBQUFV3l7e316ZWpOAAAAPUlMYWltbXFxVigZGRk+d3c3BRp5e319fGtqXgAAAAAAQUxM
        aG1xcXF0dBkZGiB1eXA8eH19fnxral4AAAAAAAAAQUxTaHFxdFYsGRkaImd7e3t9fX58a2peAAAAAAAA
        AAAAQVNTbHRiGRkZGRogWWBwfX1+fGtqXgAAAAAAAAAAAAAAQ1NWb28dGRkaGiBAIDJ9fnxral4AAAAA
        AAAAAAAAAAAAQ1ZWcmMgGRoaGhoaXX58a2pEAAAAAAAAAAAAAAAAAAAASldXdT4aGhoaGhpEfGtqPAAA
        AAAAAAAAAAAAAAAAAAAASldGLRoaGl1lMho8ZWUAAAAAAAAAAAAAAAAAAAAAAAAAJBYZGhoabn58PBYq
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAJBYZWXZ2c2pqKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALR9lZWVq
        akQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRUdHSAwAAAAAAAAAAAAAAAAAP/4H///8A///+AH///A
        A///gAH//wAA//4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA4AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAAAABwAAAA+AAAAfwAAAP+AAAH/wAAD/+AAB//wAA//+AAf//wAP//+AH///wD///+B//KAAAADAA
        AABgAAAAAQAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMqUAADNmQAA0JwAANSiAADYpgAA2qoBAMaV
        BgDDmwcA26wHAMmbCADYpwkAy50KAMyiCwDUowsA1aoNANCfEwC2nRYA27EWANKpGQDDpBoAzqAcAL2j
        IADWqSUAp6ImANGjJgDJqSYA2a4mANyyJgC5qysA0KUsAM6rLwCkqDAAwK40AMqzNQC2qzYA1rc2AJio
        OQC/rjsAz647AKmxPwDTrkEAqLBCANa9RQC1sUYAzLZGAJexTQCst08AybxQALa8VAB8tFgArLhYAMTC
        WwDTwlsA075dALLAYADTw2QApL9nAMbHagBnumsAvsFrAKzCawB+vXEAbb1yAMbJcwDYy3MAocJ1AK/H
        dwCRw3gAdcB5AFzAfQCExX4AoseBALrNggDU0okAlMiKAH3IiwC80ZEAhsySAJbMkgCyzJIAo86YAFHL
        mQCq0JwAndKdAIrQnwCx0qAAW86hANXbowBn0aYAt9WmAJjUpwDE2qgAgNSpAKbXrABy1K0A0tuwAHvX
        sgCv27QA1t60AIHZtgDS4rcAut64AIbauQDT37kAi9u8AMrivADb4b0Akt2+AI7dvwCm38AAk97CAJff
        xACc4cgAz+bJAKPjzADY6M8AqOXQAMHo0QCv59QAtejXALjp2QC769sA1u3bAL/s3gDG7uIAzfHmANXz
        6wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcX
        JCQkJBcHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQFzo6Oj4+Pj49JAcAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAGABAfMT4+Pj5ERD0QAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEAYAAAABAQsfMUREREQ9EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABgAAAQEBAQECAgILFScpLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEB
        AQECAgICAgICAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQICAgICAgICAgEA
        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
        AAD//4AB//8AAP//wAP//wAA///wD///AAA=
</value>
  </data>
</root>